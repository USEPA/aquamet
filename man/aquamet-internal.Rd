% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aquamet-internal.r
\name{aquamet-internal}
\alias{aquamet-internal}
\alias{assignTaxCat}
\alias{calcSynCovers}
\alias{calcSynInfluence}
\alias{convert_to_char}
\alias{count}
\alias{dfCompare}
\alias{dfLengthen}
\alias{dfWiden}
\alias{expandDataFrame}
\alias{fillinDrawdownData}
\alias{fillinDrawdownData.expansion}
\alias{first}
\alias{gmean}
\alias{idr}
\alias{iqr}
\alias{interpolatePercentile}
\alias{is.subset}
\alias{intermediateMessage}
\alias{lag}
\alias{last}
\alias{lead}
\alias{modalClass}
\alias{modalClasses}
\alias{modalCount}
\alias{modalvalue}
\alias{modalValues}
\alias{normalizedCover}
\alias{nWadeableStationsPerTransect}
\alias{protectedMean}
\alias{protectedSum}
\alias{rename}
\alias{summaryby}
\alias{trimws}
\alias{uidCreate}
\alias{uidSeparate}
\alias{aquametStandardizeArgument}
\alias{aquametStandardizeArgument.checkLegal}
\alias{aquametStandardizeArgument.checkRange}
\alias{aquametStandardizeArgument.checkStructure}
\alias{nlaStationInformation.islandStations}
\alias{nlaStationInformation.stationDepths}
\alias{fillinDDWithRiparianValues}
\alias{fillinAbsentMissingWithDefaultValue.expansion}
\alias{fillinAbsentMissingWithDefaultValue}
\alias{nlaHumanImpact.calculateMets}
\alias{nlaHumanImpact.weightedIndividualInfluence}
\alias{nlaHumanImpact.overallInfluence}
\alias{nlaHumanImpact.circaInfluence}
\alias{nlaHumanImpact.anyPresence}
\alias{nlaHumanImpact.weightedGroupInfluence}
\alias{nlaAquaticMacrophytes.individualCover}
\alias{nlaAquaticMacrophytes.indices}
\alias{nlaBankFeatures.standardizeData}
\alias{nlaBankFeatures.bankAngle}
\alias{nlaBankFeatures.distances}
\alias{nlaBankFeatures.fillinDistances}
\alias{nlaBottomSubstrate.setupForParticleCalculations}
\alias{nlaBottomSubstrate.indivPresence}
\alias{nlaBottomSubstrate.variety}
\alias{nlaBottomSubstrate.indivCover}
\alias{nlaBottomSubstrate.populationEstimates}
\alias{nlaBottomSubstrate.modeCover}
\alias{nlaBottomSubstrate.indivColor}
\alias{nlaBottomSubstrate.modeColor}
\alias{nlaBottomSubstrate.indivOdor}
\alias{nlaBottomSubstrate.modeOdor}
\alias{nlaFishCover.calculateMets}
\alias{nlaFishCover.splitParameterNames}
\alias{nlaFishCover.indivCovers}
\alias{nlaFishCover.groupIndices}
\alias{nlaLittoralMacrohabitat.cover}
\alias{nlaLittoralMacrohabitat.coverTypes}
\alias{nlaLittoralMacrohabitat.humanDist}
\alias{nlaLittoralMacrohabitat.substrate}
\alias{nlaLittoralZone.prepareInput}
\alias{nlaLittoralZone.modeFilm}
\alias{nlaLittoralZone.fractionalPresences}
\alias{nlaLittoralZone.filmVariety}
\alias{nlaRiparianVegetation.calculateMets}
\alias{nlaRiparianVegetation.canopyTypePresence}
\alias{nlaRiparianVegetation.understoryTypePresence}
\alias{nlaRiparianVegetation.componentPresence}
\alias{nlaRiparianVegetation.componentCovers}
\alias{nlaRiparianVegetation.compositeIndex}
\title{aquamet internal functions}
\usage{
aquametStandardizeArgument.checkLegal(arg, expectedLegal)
aquametStandardizeArgument.checkRange(arg, expectedRange)
aquametStandardizeArgument.checkStructure(arg, expectedStruct)
assignTaxCat(lt)
calcSynCovers(coverData, maxDrawdown, assumptions=FALSE)
calcSynInfluence(influenceData)
convert_to_char(df)
count(x)
dfCompare(df1, df2, byVars, zeroFudge=1e-17, verbose=FALSE)
dfLengthen(df, keys, name, value, values)
expandDataFrame(df, cols)
first(df, v, first.v)
gmean(x)
idr(x, method=2)
iqr(x, method=2)
interpolatePercentile(df, classVar, percentile, pctlVar, classBounds)
is.subset(a, b)
intermediateMessage(text, loc='middle', intermediateMessages=TRUE)
lag(df, v, lag.v, offset=1)
last(df, v, last.v)
lead(df, v, lead.v, offset=1)
modalClass(x, values, classes)
modalClasses(df, classes, weights, delim = ', ')
modalCount(x)
modalvalue(x, na.rm=FALSE)
modalValues(x, delim='&', na.rm=FALSE)
normalizedCover(df, coverValue, coverNorm, allowTotalBelow100=FALSE)
nWadeableStationsPerTransect(thal)
protectedMean(x, na.rm=FALSE, inf.rm=FALSE, nan.rm=FALSE, ...)
protectedSum(x, na.rm=FALSE, inf.rm=FALSE, nan.rm=FALSE, ...)
summaryby(xxx,yyy,zzz)
trimws(text)
uidCreate(df, keys, sep='+')
uidSeparate(df, uidName, keyNames, sep='+')
nlaStationInformation.islandStations(df)
nlaStationInformation.stationDepths(df)
aquametStandardizeArgument(arg, ..., ifdf=NULL, 
struct=list(SITE, VALUE), 
rangeLimits=NULL, legalValues=NULL, stopOnError=TRUE, 
metsFuncName,
argSavePath = NULL))
fillinDDWithRiparianValues(hiData, horizDist, fillinMaxDrawdownDist)
fillinAbsentMissingWithDefaultValue(df)
fillinAbsentMissingWithDefaultValue.expansion(df)
nlaHumanImpact.calculateMets(hiData)
nlaHumanImpact.weightedIndividualInfluence(hiData)
nlaHumanImpact.overallInfluence(hiData)
nlaHumanImpact.circaInfluence(hiData)
nlaHumanImpact.anyPresence(hiData)  
nlaHumanImpact.weightedGroupInfluence(hiData)
nlaAquaticMacrophytes.individualCover(df, presenceWeights, coverWeights)
nlaAquaticMacrophytes.indices(df)
nlaBankFeatures.standardizeData(df)
nlaBankFeatures.bankAngle(df)
nlaBankFeatures.distances(df)
nlaBankFeatures.fillinDistances(df)
nlaBottomSubstrate.setupForParticleCalculations(bsData, substrateCovers, substrateSizes)
nlaBottomSubstrate.indivPresence(bsPresence)
nlaBottomSubstrate.variety(bsData)	
nlaBottomSubstrate.indivCover(bsData)
nlaBottomSubstrate.populationEstimates(bsData, substrateSizes)
nlaBottomSubstrate.modeCover(presences, covers)
nlaBottomSubstrate.indivColor(df)
nlaBottomSubstrate.modeColor(df)
nlaBottomSubstrate.indivOdor(df)
nlaBottomSubstrate.modeOdor(df)
nlaFishCover.calculateMets(fcDataCalcs)
nlaFishCover.splitParameterNames(parameters)
nlaFishCover.indivCovers(fcDataCalcs)
nlaFishCover.groupIndices(fcDataCalcs)
nlaHumanImpact.calculateMets(hiData)
nlaHumanImpact.weightedIndividualInfluence(hiData)
nlaHumanImpact.overallInfluence(hiData)
nlaHumanImpact.circaInfluence(hiData)	
nlaHumanImpact.anyPresence(hiData) 
nlaHumanImpact.weightedGroupInfluence(hiData)
nlaLittoralMacrohabitat.cover(df)
nlaLittoralMacrohabitat.coverTypes(df)
nlaLittoralMacrohabitat.humanDist(df, hdWeights)
nlaLittoralMacrohabitat.substrate(df)
nlaLittoralZone.prepareInput(lzData, data2007)
nlaLittoralZone.modeFilm(df, data2007)
nlaLittoralZone.fractionalPresences(df, data2007)
nlaLittoralZone.filmVariety(df, data2007)
nlaRiparianVegetation.calculateMets(rvData)
nlaRiparianVegetation.canopyTypePresence(rvData)
nlaRiparianVegetation.understoryTypePresence(rvData)
nlaRiparianVegetation.componentPresence(rvData)
nlaRiparianVegetation.componentCovers(allFractions)
nlaRiparianVegetation.compositeIndex(groupData, indexName)
nlaStationInformation.islandStations(df)
nlaStationInformation.stationDepths(df)
}
\description{
These are internal functions to aquamet and not intended for use on their own.
}
\keyword{internal}
