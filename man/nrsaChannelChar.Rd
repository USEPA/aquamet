% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nrsaChannelChar.r
\name{nrsaChannelChar}
\alias{nrsaChannelChar}
\title{Calculate NRSA Channel Characteristic Metrics}
\usage{
nrsaChannelChar(
  bankfullWidth = NULL,
  channelPattern = NULL,
  constraintFeatures = NULL,
  constraintMultiple = NULL,
  constraintSingle = NULL,
  constraintPercent = NULL,
  seeOverBank = NULL,
  shoreToVegDistance = NULL,
  valleyConstraintUnseen = NULL,
  valleyWidth = NULL,
  isUnitTest = FALSE,
  argSavePath = NULL
)
}
\arguments{
\item{bankfullWidth}{A data frame containing bankfull width from 
channel constraint form for all reaches, with the following columns:
\itemize{
     \item SITE        integer or character specifying the site visit
     \item VALUE       numeric values
}
Note: This value is simply copied to the output without change}

\item{channelPattern}{A data frame containing pattern type from 
channel constraint form for all reaches, with the following columns:
\itemize{
     \item SITE        integer or character specifying the site visit
     \item VALUE       character values
}
 Note: This value is simply copied to the output without change}

\item{constraintFeatures}{A data frame containing constraint features from 
channel constraint form for all reaches, with the following columns:
\itemize{
     \item SITE        integer or character specifying the site visit
     \item VALUE       character values
}
Note: This value is simply copied to the output without change}

\item{constraintMultiple}{A data frame containing constraining features from 
channel riparian forms for boatable reaches, with the following columns:
\itemize{
    \item SITE        integer or character specifying the site visit
    \item VALUE       character values expected to be one of 'B',
 }                                 'C','N','U' or NA}

\item{constraintSingle}{A data frame containing constraint features from 
channel constraint form for all reaches, with the following columns:
\itemize{
    \item SITE        integer or character specifying the site visit
    \item VALUE       character values
    }
 Note: This value is simply copied to the output without change}

\item{constraintPercent}{A data frame containing percent constraint 
estimates from channel constraint form for allreaches, with the following 
columns:
\itemize{
    \item SITE        integer or character specifying the site visit
    \item VALUE       numeric values
    }
 Note: This value is simply copied to the output without change}

\item{seeOverBank}{A data frame containing variable indicating
whether crew could see over the bank (N/Y) from channel 
riparian forms for boatable reaches, with the following columns:
\itemize{
    \item SITE        integer or character specifying the site visit
    \item VALUE       character values = 'YES' if true, other value
                       if not true
 }}

\item{shoreToVegDistance}{A data frame containing distance (in meters) 
from shore to vegetation from channel riparian forms for boatable reaches,
with the following columns:
\itemize{
    \item SITE        integer or character specifying the site visit
    \item VALUE       numeric values
   }}

\item{valleyConstraintUnseen}{A data frame containing canopy densiometer 
from channel constraint form for all reaches, with the following
columns:
\itemize{
    \item SITE    integer or character specifying the site visit 
    \item VALUE   character values
 }
 Note: This value is simply copied to the output without change}

\item{valleyWidth}{A data frame containing canopy densiometer from channel 
constraint form for all reaches, with the following columns:
\itemize{
    \item SITE  integer or character specifying the site visit
    \item VALUE numeric values 
 }
 Note: This value is simply copied to the output without change.}

\item{isUnitTest}{Logical argument to determine whether errors should be ignored.
Should only be used for running a unit test. Default value is FALSE.}

\item{argSavePath}{character string specifying the path to which data 
arguments are saved as csv files, or NULL if those files are not to be 
written.}
}
\value{
Either a data frame when metric calculation is successful or a 
NULL when metric calculation is not successful.  The data frame contains 
the following columns:
 \itemize{
 \item SITE universal ID value
 \item METRIC metric name
 \item VALUE metric value
 }
 
Metrics calculated include: xshor2vg, mxshor, mnshor, pct_ovrb, 
pctch_b, pctch_c, pctch_n, pctch_u, conbankfull, confeatures, 
conpattern, conpercent, constraint, convalley, convalleybox
 
Descriptions for all metrics are included in 
\emph{NRSA_Physical_Habitat_Metric_Descriptions.pdf} in the package
documentation.
}
\description{
This function calculates the channel characteristics 
portion of the physical habitat metrics for National Rivers and 
Streams Assessment (NRSA) data.  The function requires data frames 
containing the bank geometry and channel characteristics data files.
}
\examples{
head(chancharEx)

# Must subset example dataset to create inputs, keeping only SITE
  #  and VALUE
# bankfullWidth
bkfW <- subset(chancharEx, PARAMETER=='BANKFULL',
select = c('SITE','VALUE'))
# Make sure VALUE is numeric for this argument
   bkfW$VALUE <- as.numeric(bkfW$VALUE)
# channelPattern
chanPat <- subset(chancharEx, PARAMETER=='PATTERN',
select = c('SITE','VALUE'))
# constraintFeatures
conFeat <- subset(chancharEx, PARAMETER=='FEATURES',
select = c('SITE','VALUE'))
# constraintMultiple 
conMult <- subset(bankgeomEx, PARAMETER=='CONSTRT',
select = c('SITE','VALUE'))
# constraintSingle
conSing <- subset(chancharEx, PARAMETER=='CONSTRNT',
select = c('SITE','VALUE'))
# constraintPercent
conPer <- subset(chancharEx, PARAMETER=='PERCENT',
select = c('SITE','VALUE'))
  # Ensure value is numeric
  conPer$VALUE <- as.numeric(conPer$VALUE)
# seeOverBank
seeOver <- subset(bankgeomEx, PARAMETER=='SEEOVRBK',
select = c('SITE','VALUE'))
# shoreToVegDistance
shoreToVeg <- subset(chancharEx, PARAMETER=='SHOR2RIP',
select = c('SITE','VALUE'))
  # Ensure value is numeric
  shoreToVeg$VALUE <- as.numeric(shoreToVeg$VALUE)
# valleyConstraintUnseen
valCon <- subset(chancharEx, PARAMETER=='VALLYBOX',
select = c('SITE','VALUE'))
# valleyWidth
valWid <- subset(chancharEx, PARAMETER=='VALLEY',
select = c('SITE','VALUE'))
  valWid$VALUE <- as.numeric(valWid$VALUE)
# Use default isUnitTest value of FALSE
chanCharOut <- nrsaChannelChar(bankfullWidth=bkfW, 
channelPattern=chanPat, constraintFeatures=conFeat,
constraintMultiple=conMult, constraintSingle=conSing,
constraintPercent=conPer, seeOverBank=seeOver,
shoreToVegDistance=shoreToVeg, valleyConstraintUnseen=valCon,
valleyWidth=valWid)

head(chanCharOut)

}
\author{
Curt Seeliger \email{Seeliger.Curt@epa.gov}\cr
Tom Kincaid \email{Kincaid.Tom@epa.gov}
}
